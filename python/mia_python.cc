// This file has been generated by Py++.

#include <boost/python.hpp>
#include <boost/python/suite/indexing/vector_indexing_suite.hpp>
#include <vector>
#include <mia/core/msgstream.hh>
#include <mia/core/ica.hh>

namespace bp=boost::python;
using namespace std;
using namespace mia;


typedef std::vector<float>  FloatVector;
typedef std::vector<int>    IntVector;
typedef std::vector<short>  ShortVector;
typedef std::vector<double> DoubleVector;

class CICAPython: public CICAAnalysis {
public: 
	CICAPython(int rows, int length);

	void set_row(int i, const FloatVector& data); 
}; 

BOOST_PYTHON_MODULE(mia)
{
	bp::class_<FloatVector>("FloatVector").def(bp::vector_indexing_suite<FloatVector>());
	bp::class_<IntVector>("IntVector").def(bp::vector_indexing_suite<IntVector>());
	bp::class_<ShortVector>("ShortVector").def(bp::vector_indexing_suite<ShortVector>());
	bp::class_<DoubleVector>("DoubleVector").def(bp::vector_indexing_suite<DoubleVector>());

	bp::class_<CICAPython>("ica",bp::init<int, int >()).
		def("set_row", &CICAPython::set_row).
		def("get_mixing_signal", &CICAPython::get_mix_series); 
	
}

CICAPython::CICAPython(int rows, int length):
	CICAAnalysis(rows, length)
{
}

void CICAPython::set_row(int i, const FloatVector& data)
{
	CICAAnalysis::set_row(i, data.begin(), data.end()); 
}

